{"version":3,"sources":["./src/app/pipes/pipe-imagen.pipe.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/cartas-completo/cartas-completo.component.html","./src/app/components/cartas-completo/cartas-completo.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/carta/carta.component.ts","./src/app/components/carta/carta.component.html","./src/app/components/uno/uno.component.ts","./src/app/components/uno/uno.component.html","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/services/tecnologias.service.ts","./src/app/components/dos/dos.component.html","./src/app/components/dos/dos.component.ts","./src/app/components/directiva-switch/directiva-switch.component.html","./src/app/components/directiva-switch/directiva-switch.component.ts","./src/app/components/directiva-if/directiva-if.component.html","./src/app/components/directiva-if/directiva-if.component.ts","./src/app/components/directiva-for/directiva-for.component.html","./src/app/components/directiva-for/directiva-for.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pipeImagen'\n})\nexport class PipeImagenPipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): string {\n    \n    if (value.length == 0){\n      return 'assets/images/angular.png'\n    }\n    \n    return value;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private ruta: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  pasoParametros(parametro: string, parametroDos: string){\n      this.ruta.navigate([parametroDos,parametro])\n  }\n\n\n}\n","<h1>Aplicación de rutas</h1>\n\n<div class=\"m-4\">\n  <input\n    type=\"text\"\n    placeholder=\"introduce nombre\"\n    class=\"form-control\"\n    #inputNombre\n  />\n  <button\n    class=\"btn btn-primary\"\n    routerLinkActive=\"router-link-active\"\n    (click)=\"pasoParametros(inputNombre.value, 'uno')\"\n  >\n    Pasar a componente uno\n  </button>\n  <input\n    type=\"text\"\n    placeholder=\"introduce apellido\"\n    class=\"form-control\"\n    #inputApellido\n  />\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"pasoParametros(inputApellido.value, 'dos')\"\n  >\n    Pasar a componente dos\n  </button>\n</div>\n","<h1>Cartas - Servicio</h1>\n<input class=\"form-control\" placeholder=\"que quieres buscar\" #inputRef />\n<button class=\"btn btn-primary\" (click)=\"buscarTecnologia(inputRef.value)\">\n  Buscar\n</button>\n<div class=\"row\">\n  <div class=\"col\" *ngFor=\"let item of tecnologias\">\n    <div class=\"card\" style=\"width: 18rem\">\n      <img [src]=\"item.imagen\" class=\"card-img-top\" alt=\"...\" />\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{{ item.nombre }}</h5>\n        <p class=\"card-text\">\n          {{ item.aplicacion }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { TecnologiaInterfaz } from './../../utils/TecnologiaInterfaz';\nimport { TecnologiasService } from './../../services/tecnologias.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cartas-completo',\n  templateUrl: './cartas-completo.component.html',\n  styleUrls: ['./cartas-completo.component.css']\n})\nexport class CartasCompletoComponent implements OnInit {\n\n  tecnologias: TecnologiaInterfaz[] = [];\n\n  constructor(private servicioDatos: TecnologiasService) { }\n\n  ngOnInit(): void {\n    // Tecnologias[]\n    this.tecnologias = this.servicioDatos.getAllTecnologias();\n  }\n\n  buscarTecnologia(busqueda: string){\n    //console.log(busqueda);\n    this.tecnologias = this.servicioDatos.getTecnologiasFiltradas(busqueda);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DirectivaIfComponent } from './components/directiva-if/directiva-if.component';\nimport { DirectivaSwitchComponent } from './components/directiva-switch/directiva-switch.component';\nimport { DirectivaForComponent } from './components/directiva-for/directiva-for.component';\nimport { PipeImagenPipe } from './pipes/pipe-imagen.pipe';\nimport { CartasCompletoComponent } from './components/cartas-completo/cartas-completo.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { UnoComponent } from './components/uno/uno.component';\nimport { DosComponent } from './components/dos/dos.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CartaComponent } from './components/carta/carta.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DirectivaIfComponent,\n    DirectivaSwitchComponent,\n    DirectivaForComponent,\n    PipeImagenPipe,\n    CartasCompletoComponent,\n    NavBarComponent,\n    UnoComponent,\n    DosComponent,\n    HomeComponent,\n    CartaComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { TecnologiaInterfaz } from './../../utils/TecnologiaInterfaz';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-carta',\n  templateUrl: './carta.component.html',\n  styleUrls: ['./carta.component.css']\n})\nexport class CartaComponent implements OnInit {\n\n  @Input() datoCarta:TecnologiaInterfaz | undefined;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" style=\"width: 18rem\">\n  <img [src]=\"\" class=\"card-img-top\" alt=\"...\" />\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">asdfghj</h5>\n    <p class=\"card-text\">\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n    </p>\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-uno',\n  templateUrl: './uno.component.html',\n  styleUrls: ['./uno.component.css']\n})\nexport class UnoComponent implements OnInit {\n\n  constructor(private rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.rutaActiva.snapshot.params.nombre)\n  }\n\n}\n","<h2>Componente uno</h2>\n<app-carta></app-carta>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(private rutas: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navegar(){\n    this.rutas.navigate(['dos',1123456])\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            aria-current=\"page\"\n            [routerLink]=\"['/home']\"\n            routerLinkActive=\"router-link-active\"\n            >Home</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            [routerLink]=\"['/uno']\"\n            routerLinkActive=\"router-link-active\"\n            >Componente uno</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" (click)=\"navegar()\">Componente dos</a>\n          <!-- <a\n            class=\"nav-link\"\n            [routerLink]=\"['/dos', 123]\"\n            routerLinkActive=\"router-link-active\"\n            >Componente dos</a\n          > -->\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { TecnologiaInterfaz } from './../utils/TecnologiaInterfaz';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TecnologiasService {\n\n  tecnologias: TecnologiaInterfaz[] = [\n    {nombre:\"Java\",imagen:\"assets/images/news.jpg\",aplicacion:\"Multiplataforma\"},\n    {nombre:\"JS\",imagen:\"\",aplicacion:\"Web\"},\n    {nombre:\"MYSQL\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"HTML\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"CSS\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"Python\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"Powershell\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"Angular\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"XML\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"PHP\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"}\n  ]\n\n  constructor() { }\n\n  getAllTecnologias(): TecnologiaInterfaz[]  {\n    return this.tecnologias;\n  }\n\n  getTecnologiasFiltradas(busqueda: string):TecnologiaInterfaz[]  {\n\n    /*let arrayFiltrado: TecnologiaInterfaz[] = [];\n\n    this.tecnologias.forEach(element => {\n      if (element.nombre.toLowerCase().includes(busqueda.toLowerCase())){\n        arrayFiltrado.push(element)\n      }\n    });*/\n\n    return this.tecnologias.filter((elemento)=>{\n      return elemento.nombre.toLowerCase()\n      .includes(busqueda.toLowerCase())\n    });\n  }\n\n}\n","<h2>Componente dos</h2>\n<div *ngIf=\"apellido.length > 3; else noCumple\">\n  <p>El apellido pasado es: {{ apellido }}</p>\n</div>\n\n<ng-template #noCumple>\n  <p>El apellido no es suficientemente grande</p>\n</ng-template>\n\n<div class=\"row\">\n  <div class=\"col\" *ngFor=\"let item of tecnologias\">\n    <app-carta [datoCarta]=\"item\"></app-carta>\n  </div>\n</div>\n","import { TecnologiasService } from './../../services/tecnologias.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TecnologiaInterfaz } from 'src/app/utils/TecnologiaInterfaz';\n\n@Component({\n  selector: 'app-dos',\n  templateUrl: './dos.component.html',\n  styleUrls: ['./dos.component.css']\n})\nexport class DosComponent implements OnInit {\n\n  apellido: string = '';\n  tecnologias: TecnologiaInterfaz[] = [];\n\n  constructor(private rutaActiva: ActivatedRoute, private servicio: TecnologiasService) { }\n\n  ngOnInit(): void {\n    //console.log(this.rutaActiva.snapshot.params.apellido);\n    this.apellido = this.rutaActiva.snapshot.params.apellido;\n    this.tecnologias = this.servicio.getAllTecnologias();\n  }\n\n}\n","<h2>Directiva switch</h2>\n<p>La directiva switch sirve para mostrar contenidos dependiendo de un valor</p>\n<input\n  type=\"number\"\n  placeholder=\"intro número\"\n  class=\"form-control\"\n  #inputNumber\n  (change)=\"cambioInput(inputNumber.value)\"\n/>\n\n\n<div [ngSwitch]=\"numero\">\n  <div *ngSwitchCase=\"0\" class=\"alert alert-primary\" role=\"alert\">\n    Seleccionado opcion 0\n  </div>\n  <div *ngSwitchCase=\"1\" class=\"alert alert-warning\" role=\"alert\">\n    Seleccionado opcion 1\n  </div>\n  <div *ngSwitchCase=\"2\" class=\"alert alert-success\" role=\"alert\">\n    Seleccionado opcion 2\n  </div>\n  <div *ngSwitchDefault class=\"alert alert-danger\" role=\"alert\">\n    Seleccionado opcion defecto\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-directiva-switch',\n  templateUrl: './directiva-switch.component.html',\n  styleUrls: ['./directiva-switch.component.css']\n})\nexport class DirectivaSwitchComponent implements OnInit {\n\n  numero: number = 3;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cambioInput(param: string){\n    //console.log(event.target);\n    this.numero = parseInt(param);\n    \n  }\n\n}\n","<h2>Directiva if</h2>\n<p>\n  La directiva if sirve para poder mostrar una etiqueta u otra dependiendo de un\n  valor\n</p>\n\n<input type=\"number\" placeholder=\"introduce numero\" #inputNumber />\n<button (click)=\"cambiarValor()\">{{ textoBoton }}</button>\n<button (click)=\"cambiarValorInput(inputNumber.value)\">Pulsar input</button>\n\n<!-- <div\n  class=\"alert alert-primary\"\n  role=\"alert\"\n  *ngIf=\"variabloMostrarNumero > 10\"\n>\n  Etiqueta primaria mostrada\n</div> -->\n\n<ng-container *ngIf=\"variableMostrar; else elseTemplate\">\n  <form>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n      />\n      <div id=\"emailHelp\" class=\"form-text\">\n        We'll never share your email with anyone else.\n      </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" />\n    </div>\n    <div class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n      <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</ng-container>\n<ng-template #elseTemplate>\n  <form>\n    <fieldset disabled>\n      <legend>Disabled fieldset example</legend>\n      <div class=\"mb-3\">\n        <label for=\"disabledTextInput\" class=\"form-label\">Disabled input</label>\n        <input\n          type=\"text\"\n          id=\"disabledTextInput\"\n          class=\"form-control\"\n          placeholder=\"Disabled input\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"disabledSelect\" class=\"form-label\"\n          >Disabled select menu</label\n        >\n        <select id=\"disabledSelect\" class=\"form-select\">\n          <option>Disabled select</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"disabledFieldsetCheck\"\n            disabled\n          />\n          <label class=\"form-check-label\" for=\"disabledFieldsetCheck\">\n            Can't check this\n          </label>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form></ng-template\n>\n\n<!-- if (condicion){\n\n} else {\n\n} \n-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-directiva-if',\n  templateUrl: './directiva-if.component.html',\n  styleUrls: ['./directiva-if.component.css']\n})\nexport class DirectivaIfComponent implements OnInit {\n\n\n  textoBoton: string = \"Ver Login\"\n  variableMostrar: boolean = true;\n  variabloMostrarNumero: number = 3;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cambiarValor(){\n    this.variableMostrar = !this.variableMostrar\n    if (this.variableMostrar){\n      this.textoBoton = \"Ver Registro\"\n    } else {\n      this.textoBoton = \"Ver Login\"\n    }\n  }\n\n  cambiarValorInput(valor: string){\n    this. variabloMostrarNumero = parseInt(valor);\n  }\n\n}\n","<h2>Directiva for</h2>\n<p>\n  La directiva ngfor sirve para repetir n veces (número de elementos que tenga\n  una colección) un div o elemento determinado\n</p>\n<div>\n  <h3>Conocimientos</h3>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let item of conocimientos\">\n      {{ item }}\n    </li>\n  </ul>\n\n  <h3>Cartas</h3>\n  <div class=\"row\">\n    <div class=\"col\" *ngFor=\"let item of tecnologiasObjetos\">\n      <div class=\"card\" style=\"width: 18rem\">\n        <img [src]=\"item.imagen | pipeImagen\" class=\"card-img-top\" alt=\"...\" />\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ item.nombre }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { TecnologiaInterfaz } from './../../utils/TecnologiaInterfaz';\nimport { Component, OnInit } from '@angular/core';\nimport { Tecnologia } from 'src/app/utils/Tecnologia';\n\n@Component({\n  selector: 'app-directiva-for',\n  templateUrl: './directiva-for.component.html',\n  styleUrls: ['./directiva-for.component.css']\n})\nexport class DirectivaForComponent implements OnInit {\n\n  conocimientos: string[] = ['Java','Angular','MySQL','PHP','JS','TypeScript','Python','HTML','CSS', 'Powershell', 'JavaFX','C#','.NET']\n  /*tecnologia1: Tecnologia = new Tecnologia(\"Java\",\"assets/images/news.jpg\",\"Multiplataforma\");\n  tecnologia2: Tecnologia = new Tecnologia(\"JS\",\"assets/images/angular.png\",\"Multiplataforma\");\n  tecnologia3: Tecnologia = new Tecnologia(\"MySQL\",\"assets/images/news.jpg\",\"Multiplataforma\");\n  tecnologiasObjetos: Tecnologia[] = [this.tecnologia1,this.tecnologia2,this.tecnologia3];*/\n\n  tecnologiasObjetos: TecnologiaInterfaz[] = [\n    {nombre:\"Java\",imagen:\"assets/images/news.jpg\",aplicacion:\"Multiplataforma\"},\n    {nombre:\"JS\",imagen:\"\",aplicacion:\"Web\"},\n    {nombre:\"MYSQL\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"}\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","import { DosComponent } from './components/dos/dos.component';\nimport { UnoComponent } from './components/uno/uno.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path:'home',component:HomeComponent},\n  {path:'uno',component:UnoComponent},\n  {path:'uno/:nombre',component:UnoComponent},\n  {path:'dos',component:DosComponent},\n  {path:'dos/:apellido',component:DosComponent},\n  /* {path:'dos/:id',component:DosComponent} */\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}