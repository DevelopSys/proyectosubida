{"version":3,"sources":["webpack:///src/app/pipes/pipe-imagen.pipe.ts","webpack:///src/environments/environment.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/cartas-completo/cartas-completo.component.html","webpack:///src/app/components/cartas-completo/cartas-completo.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/carta/carta.component.ts","webpack:///src/app/components/carta/carta.component.html","webpack:///src/app/components/uno/uno.component.ts","webpack:///src/app/components/uno/uno.component.html","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/services/tecnologias.service.ts","webpack:///src/app/components/dos/dos.component.html","webpack:///src/app/components/dos/dos.component.ts","webpack:///src/app/components/directiva-switch/directiva-switch.component.html","webpack:///src/app/components/directiva-switch/directiva-switch.component.ts","webpack:///src/app/components/directiva-if/directiva-if.component.html","webpack:///src/app/components/directiva-if/directiva-if.component.ts","webpack:///src/app/components/directiva-for/directiva-for.component.html","webpack:///src/app/components/directiva-for/directiva-for.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PipeImagenPipe","value","length","environment","production","HomeComponent","ruta","parametro","parametroDos","navigate","pasoParametros","CartasCompletoComponent","servicioDatos","tecnologias","getAllTecnologias","busqueda","getTecnologiasFiltradas","buscarTecnologia","AppComponent","AppModule","CartaComponent","UnoComponent","rutaActiva","console","log","snapshot","params","nombre","NavBarComponent","rutas","navegar","TecnologiasService","imagen","aplicacion","filter","elemento","toLowerCase","includes","DosComponent","servicio","apellido","DirectivaSwitchComponent","numero","param","parseInt","cambioInput","DirectivaIfComponent","textoBoton","variableMostrar","variabloMostrarNumero","valor","cambiarValor","cambiarValorInput","DirectivaForComponent","conocimientos","tecnologiasObjetos","routes","path","component","AppRoutingModule","forRoot","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'pipeImagen'\n})\nexport class PipeImagenPipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): string {\n    \n    if (value.length == 0){\n      return 'assets/images/angular.png'\n    }\n    \n    return value;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private ruta: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  pasoParametros(parametro: string, parametroDos: string){\n      this.ruta.navigate([parametroDos,parametro])\n  }\n\n\n}\n","<h1>Aplicación de rutas</h1>\n\n<div class=\"m-4\">\n  <input\n    type=\"text\"\n    placeholder=\"introduce nombre\"\n    class=\"form-control\"\n    #inputNombre\n  />\n  <button\n    class=\"btn btn-primary\"\n    routerLinkActive=\"router-link-active\"\n    (click)=\"pasoParametros(inputNombre.value, 'uno')\"\n  >\n    Pasar a componente uno\n  </button>\n  <input\n    type=\"text\"\n    placeholder=\"introduce apellido\"\n    class=\"form-control\"\n    #inputApellido\n  />\n  <button\n    class=\"btn btn-primary\"\n    (click)=\"pasoParametros(inputApellido.value, 'dos')\"\n  >\n    Pasar a componente dos\n  </button>\n</div>\n","<h1>Cartas - Servicio</h1>\n<input class=\"form-control\" placeholder=\"que quieres buscar\" #inputRef />\n<button class=\"btn btn-primary\" (click)=\"buscarTecnologia(inputRef.value)\">\n  Buscar\n</button>\n<div class=\"row\">\n  <div class=\"col\" *ngFor=\"let item of tecnologias\">\n    <div class=\"card\" style=\"width: 18rem\">\n      <img [src]=\"item.imagen\" class=\"card-img-top\" alt=\"...\" />\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">{{ item.nombre }}</h5>\n        <p class=\"card-text\">\n          {{ item.aplicacion }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { TecnologiaInterfaz } from './../../utils/TecnologiaInterfaz';\nimport { TecnologiasService } from './../../services/tecnologias.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cartas-completo',\n  templateUrl: './cartas-completo.component.html',\n  styleUrls: ['./cartas-completo.component.css']\n})\nexport class CartasCompletoComponent implements OnInit {\n\n  tecnologias: TecnologiaInterfaz[] = [];\n\n  constructor(private servicioDatos: TecnologiasService) { }\n\n  ngOnInit(): void {\n    // Tecnologias[]\n    this.tecnologias = this.servicioDatos.getAllTecnologias();\n  }\n\n  buscarTecnologia(busqueda: string){\n    //console.log(busqueda);\n    this.tecnologias = this.servicioDatos.getTecnologiasFiltradas(busqueda);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DirectivaIfComponent } from './components/directiva-if/directiva-if.component';\nimport { DirectivaSwitchComponent } from './components/directiva-switch/directiva-switch.component';\nimport { DirectivaForComponent } from './components/directiva-for/directiva-for.component';\nimport { PipeImagenPipe } from './pipes/pipe-imagen.pipe';\nimport { CartasCompletoComponent } from './components/cartas-completo/cartas-completo.component';\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\nimport { UnoComponent } from './components/uno/uno.component';\nimport { DosComponent } from './components/dos/dos.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CartaComponent } from './components/carta/carta.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DirectivaIfComponent,\n    DirectivaSwitchComponent,\n    DirectivaForComponent,\n    PipeImagenPipe,\n    CartasCompletoComponent,\n    NavBarComponent,\n    UnoComponent,\n    DosComponent,\n    HomeComponent,\n    CartaComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { TecnologiaInterfaz } from './../../utils/TecnologiaInterfaz';\nimport { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-carta',\n  templateUrl: './carta.component.html',\n  styleUrls: ['./carta.component.css']\n})\nexport class CartaComponent implements OnInit {\n\n  @Input() datoCarta:TecnologiaInterfaz | undefined;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"card\" style=\"width: 18rem\">\n  <img [src]=\"\" class=\"card-img-top\" alt=\"...\" />\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">asdfghj</h5>\n    <p class=\"card-text\">\n      Some quick example text to build on the card title and make up the bulk of\n      the card's content.\n    </p>\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-uno',\n  templateUrl: './uno.component.html',\n  styleUrls: ['./uno.component.css']\n})\nexport class UnoComponent implements OnInit {\n\n  constructor(private rutaActiva: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.rutaActiva.snapshot.params.nombre)\n  }\n\n}\n","<h2>Componente uno</h2>\n<app-carta></app-carta>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor(private rutas: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navegar(){\n    this.rutas.navigate(['dos',1123456])\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            aria-current=\"page\"\n            [routerLink]=\"['/home']\"\n            routerLinkActive=\"router-link-active\"\n            >Home</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link\"\n            [routerLink]=\"['/uno']\"\n            routerLinkActive=\"router-link-active\"\n            >Componente uno</a\n          >\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" (click)=\"navegar()\">Componente dos</a>\n          <!-- <a\n            class=\"nav-link\"\n            [routerLink]=\"['/dos', 123]\"\n            routerLinkActive=\"router-link-active\"\n            >Componente dos</a\n          > -->\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { TecnologiaInterfaz } from './../utils/TecnologiaInterfaz';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TecnologiasService {\n\n  tecnologias: TecnologiaInterfaz[] = [\n    {nombre:\"Java\",imagen:\"assets/images/news.jpg\",aplicacion:\"Multiplataforma\"},\n    {nombre:\"JS\",imagen:\"\",aplicacion:\"Web\"},\n    {nombre:\"MYSQL\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"HTML\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"CSS\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"Python\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"Powershell\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"Angular\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"XML\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"},\n    {nombre:\"PHP\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"}\n  ]\n\n  constructor() { }\n\n  getAllTecnologias(): TecnologiaInterfaz[]  {\n    return this.tecnologias;\n  }\n\n  getTecnologiasFiltradas(busqueda: string):TecnologiaInterfaz[]  {\n\n    /*let arrayFiltrado: TecnologiaInterfaz[] = [];\n\n    this.tecnologias.forEach(element => {\n      if (element.nombre.toLowerCase().includes(busqueda.toLowerCase())){\n        arrayFiltrado.push(element)\n      }\n    });*/\n\n    return this.tecnologias.filter((elemento)=>{\n      return elemento.nombre.toLowerCase()\n      .includes(busqueda.toLowerCase())\n    });\n  }\n\n}\n","<h2>Componente dos</h2>\n<div *ngIf=\"apellido.length > 3; else noCumple\">\n  <p>El apellido pasado es: {{ apellido }}</p>\n</div>\n\n<ng-template #noCumple>\n  <p>El apellido no es suficientemente grande</p>\n</ng-template>\n\n<div class=\"row\">\n  <div class=\"col\" *ngFor=\"let item of tecnologias\">\n    <app-carta [datoCarta]=\"item\"></app-carta>\n  </div>\n</div>\n","import { TecnologiasService } from './../../services/tecnologias.service';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TecnologiaInterfaz } from 'src/app/utils/TecnologiaInterfaz';\n\n@Component({\n  selector: 'app-dos',\n  templateUrl: './dos.component.html',\n  styleUrls: ['./dos.component.css']\n})\nexport class DosComponent implements OnInit {\n\n  apellido: string = '';\n  tecnologias: TecnologiaInterfaz[] = [];\n\n  constructor(private rutaActiva: ActivatedRoute, private servicio: TecnologiasService) { }\n\n  ngOnInit(): void {\n    //console.log(this.rutaActiva.snapshot.params.apellido);\n    this.apellido = this.rutaActiva.snapshot.params.apellido;\n    this.tecnologias = this.servicio.getAllTecnologias();\n  }\n\n}\n","<h2>Directiva switch</h2>\n<p>La directiva switch sirve para mostrar contenidos dependiendo de un valor</p>\n<input\n  type=\"number\"\n  placeholder=\"intro número\"\n  class=\"form-control\"\n  #inputNumber\n  (change)=\"cambioInput(inputNumber.value)\"\n/>\n\n\n<div [ngSwitch]=\"numero\">\n  <div *ngSwitchCase=\"0\" class=\"alert alert-primary\" role=\"alert\">\n    Seleccionado opcion 0\n  </div>\n  <div *ngSwitchCase=\"1\" class=\"alert alert-warning\" role=\"alert\">\n    Seleccionado opcion 1\n  </div>\n  <div *ngSwitchCase=\"2\" class=\"alert alert-success\" role=\"alert\">\n    Seleccionado opcion 2\n  </div>\n  <div *ngSwitchDefault class=\"alert alert-danger\" role=\"alert\">\n    Seleccionado opcion defecto\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-directiva-switch',\n  templateUrl: './directiva-switch.component.html',\n  styleUrls: ['./directiva-switch.component.css']\n})\nexport class DirectivaSwitchComponent implements OnInit {\n\n  numero: number = 3;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cambioInput(param: string){\n    //console.log(event.target);\n    this.numero = parseInt(param);\n    \n  }\n\n}\n","<h2>Directiva if</h2>\n<p>\n  La directiva if sirve para poder mostrar una etiqueta u otra dependiendo de un\n  valor\n</p>\n\n<input type=\"number\" placeholder=\"introduce numero\" #inputNumber />\n<button (click)=\"cambiarValor()\">{{ textoBoton }}</button>\n<button (click)=\"cambiarValorInput(inputNumber.value)\">Pulsar input</button>\n\n<!-- <div\n  class=\"alert alert-primary\"\n  role=\"alert\"\n  *ngIf=\"variabloMostrarNumero > 10\"\n>\n  Etiqueta primaria mostrada\n</div> -->\n\n<ng-container *ngIf=\"variableMostrar; else elseTemplate\">\n  <form>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        id=\"exampleInputEmail1\"\n        aria-describedby=\"emailHelp\"\n      />\n      <div id=\"emailHelp\" class=\"form-text\">\n        We'll never share your email with anyone else.\n      </div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n      <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" />\n    </div>\n    <div class=\"mb-3 form-check\">\n      <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n      <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</ng-container>\n<ng-template #elseTemplate>\n  <form>\n    <fieldset disabled>\n      <legend>Disabled fieldset example</legend>\n      <div class=\"mb-3\">\n        <label for=\"disabledTextInput\" class=\"form-label\">Disabled input</label>\n        <input\n          type=\"text\"\n          id=\"disabledTextInput\"\n          class=\"form-control\"\n          placeholder=\"Disabled input\"\n        />\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"disabledSelect\" class=\"form-label\"\n          >Disabled select menu</label\n        >\n        <select id=\"disabledSelect\" class=\"form-select\">\n          <option>Disabled select</option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"disabledFieldsetCheck\"\n            disabled\n          />\n          <label class=\"form-check-label\" for=\"disabledFieldsetCheck\">\n            Can't check this\n          </label>\n        </div>\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </fieldset>\n  </form></ng-template\n>\n\n<!-- if (condicion){\n\n} else {\n\n} \n-->\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-directiva-if',\n  templateUrl: './directiva-if.component.html',\n  styleUrls: ['./directiva-if.component.css']\n})\nexport class DirectivaIfComponent implements OnInit {\n\n\n  textoBoton: string = \"Ver Login\"\n  variableMostrar: boolean = true;\n  variabloMostrarNumero: number = 3;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  cambiarValor(){\n    this.variableMostrar = !this.variableMostrar\n    if (this.variableMostrar){\n      this.textoBoton = \"Ver Registro\"\n    } else {\n      this.textoBoton = \"Ver Login\"\n    }\n  }\n\n  cambiarValorInput(valor: string){\n    this. variabloMostrarNumero = parseInt(valor);\n  }\n\n}\n","<h2>Directiva for</h2>\n<p>\n  La directiva ngfor sirve para repetir n veces (número de elementos que tenga\n  una colección) un div o elemento determinado\n</p>\n<div>\n  <h3>Conocimientos</h3>\n  <ul class=\"list-group\">\n    <li class=\"list-group-item\" *ngFor=\"let item of conocimientos\">\n      {{ item }}\n    </li>\n  </ul>\n\n  <h3>Cartas</h3>\n  <div class=\"row\">\n    <div class=\"col\" *ngFor=\"let item of tecnologiasObjetos\">\n      <div class=\"card\" style=\"width: 18rem\">\n        <img [src]=\"item.imagen | pipeImagen\" class=\"card-img-top\" alt=\"...\" />\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ item.nombre }}</h5>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { TecnologiaInterfaz } from './../../utils/TecnologiaInterfaz';\nimport { Component, OnInit } from '@angular/core';\nimport { Tecnologia } from 'src/app/utils/Tecnologia';\n\n@Component({\n  selector: 'app-directiva-for',\n  templateUrl: './directiva-for.component.html',\n  styleUrls: ['./directiva-for.component.css']\n})\nexport class DirectivaForComponent implements OnInit {\n\n  conocimientos: string[] = ['Java','Angular','MySQL','PHP','JS','TypeScript','Python','HTML','CSS', 'Powershell', 'JavaFX','C#','.NET']\n  /*tecnologia1: Tecnologia = new Tecnologia(\"Java\",\"assets/images/news.jpg\",\"Multiplataforma\");\n  tecnologia2: Tecnologia = new Tecnologia(\"JS\",\"assets/images/angular.png\",\"Multiplataforma\");\n  tecnologia3: Tecnologia = new Tecnologia(\"MySQL\",\"assets/images/news.jpg\",\"Multiplataforma\");\n  tecnologiasObjetos: Tecnologia[] = [this.tecnologia1,this.tecnologia2,this.tecnologia3];*/\n\n  tecnologiasObjetos: TecnologiaInterfaz[] = [\n    {nombre:\"Java\",imagen:\"assets/images/news.jpg\",aplicacion:\"Multiplataforma\"},\n    {nombre:\"JS\",imagen:\"\",aplicacion:\"Web\"},\n    {nombre:\"MYSQL\",imagen:\"assets/images/news.jpg\",aplicacion:\"BD\"}\n  ]\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","import { DosComponent } from './components/dos/dos.component';\nimport { UnoComponent } from './components/uno/uno.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path:'home',component:HomeComponent},\n  {path:'uno',component:UnoComponent},\n  {path:'uno/:nombre',component:UnoComponent},\n  {path:'dos',component:DosComponent},\n  {path:'dos/:apellido',component:DosComponent},\n  /* {path:'dos/:id',component:DosComponent} */\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}